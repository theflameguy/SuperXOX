{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Documents/js/react/react-xox/src/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialBoards = Array(9).fill(null).map(() => Array(9).fill(null));\nconst WINNING_COMBINATIONS = [[0, 1, 2], [3, 4, 5], [6, 7, 8],\n// Rows\n[0, 3, 6], [1, 4, 7], [2, 5, 8],\n// Columns\n[0, 4, 8], [2, 4, 6] // Diagonals\n];\nconst calculateBoardWinner = board => {\n  for (const [a, b, c] of WINNING_COMBINATIONS) {\n    if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n      return board[a];\n    }\n  }\n  return null;\n};\nconst calculateGridWinner = boards => {\n  const gridWinners = boards.map(board => calculateBoardWinner(board));\n  for (const [a, b, c] of WINNING_COMBINATIONS) {\n    if (gridWinners[a] && gridWinners[a] === gridWinners[b] && gridWinners[a] === gridWinners[c]) {\n      return gridWinners[a];\n    }\n  }\n  return null;\n};\nfunction Game() {\n  _s();\n  const [boards, setBoards] = useState(initialBoards);\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [lastMove, setLastMove] = useState([null, null]);\n  const checkInvalidMove = boardIndex => {\n    if (calculateBoardWinner(boards[boardIndex])) return 1;\n    let invalid_move_flag = 0;\n    if (lastMove[1] != null && lastMove[1] != boardIndex) invalid_move_flag = 1;\n    if (lastMove[1] != null && calculateBoardWinner(boards[lastMove[1]])) invalid_move_flag = 0;\n    return invalid_move_flag;\n  };\n  const handleClick = (boardIndex, cellIndex) => {\n    if (winner || boards[boardIndex][cellIndex]) return;\n    const newBoards = boards.map((board, i) => i === boardIndex ? board.map((cell, j) => j === cellIndex ? xIsNext ? 'X' : 'O' : cell) : board);\n    if (checkInvalidMove(boardIndex)) return;\n    setLastMove([boardIndex, cellIndex]);\n    setBoards(newBoards);\n    setXIsNext(!xIsNext);\n    const newWinner = calculateGridWinner(newBoards);\n    setWinner(newWinner);\n  };\n  const renderBoard = boardIndex => /*#__PURE__*/_jsxDEV(Board, {\n    board: boards[boardIndex],\n    onClick: cellIndex => handleClick(boardIndex, cellIndex)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: !winner ? `Next player: ${xIsNext ? 'X' : 'O'}` : `Woohoo!! ${winner} won`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 'auto',\n        width: '34rem',\n        display: 'grid',\n        gridTemplateColumns: 'auto auto auto'\n      },\n      children: Array(9).fill(null).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '2px solid black',\n          padding: '1px',\n          background: checkInvalidMove(i) ? 'rgba(209, 57, 0, 0.329)' : 'white',\n          transition: 'background-color 0.4s ease'\n        },\n        children: renderBoard(i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `Winner: ${winner}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"A1Blg3m2aA58KbL7Bfh7Wf0/kk0=\");\n_c = Game;\nfunction Square({\n  value,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      width: '60px',\n      height: '60px',\n      fontSize: '3rem'\n    },\n    onClick: onClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Square;\nfunction Board({\n  board,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: 'auto auto auto'\n    },\n    children: board.map((cell, i) => /*#__PURE__*/_jsxDEV(Square, {\n      value: cell,\n      onClick: () => onClick(i)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Board;\nexport default Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"Square\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"names":["React","StrictMode","createRoot","useState","jsxDEV","_jsxDEV","initialBoards","Array","fill","map","WINNING_COMBINATIONS","calculateBoardWinner","board","a","b","c","calculateGridWinner","boards","gridWinners","Game","_s","setBoards","xIsNext","setXIsNext","winner","setWinner","lastMove","setLastMove","checkInvalidMove","boardIndex","invalid_move_flag","handleClick","cellIndex","newBoards","i","cell","j","newWinner","renderBoard","Board","onClick","fileName","_jsxFileName","lineNumber","columnNumber","children","style","margin","width","display","gridTemplateColumns","_","border","padding","background","transition","_c","Square","value","height","fontSize","_c2","_c3","$RefreshReg$"],"sources":["/Users/abhishek/Documents/js/react/react-xox/src/Game.jsx"],"sourcesContent":["import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport { useState } from 'react';\n\nconst initialBoards = Array(9).fill(null).map(() => Array(9).fill(null));\n\nconst WINNING_COMBINATIONS = [\n  [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows\n  [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns\n  [0, 4, 8], [2, 4, 6] // Diagonals\n];\n\nconst calculateBoardWinner = (board) => {\n  for (const [a, b, c] of WINNING_COMBINATIONS) {\n    if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n      return board[a];\n    }\n  }\n  return null;\n};\n\nconst calculateGridWinner = (boards) => {\n  const gridWinners = boards.map((board) => calculateBoardWinner(board));\n  \n  for (const [a, b, c] of WINNING_COMBINATIONS) {\n    if (gridWinners[a] && gridWinners[a] === gridWinners[b] && gridWinners[a] === gridWinners[c]) {\n      return gridWinners[a];\n    }\n  }\n  return null;\n};\n\nfunction Game() {\n  const [boards, setBoards] = useState(initialBoards);\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [lastMove, setLastMove] = useState([null,null]);\n\n  const checkInvalidMove = (boardIndex) => {\n    if(calculateBoardWinner(boards[boardIndex])) return 1;\n\n    let invalid_move_flag = 0\n    \n    if(lastMove[1]!= null && lastMove[1]!=boardIndex) invalid_move_flag=1;\n    if(lastMove[1]!= null && calculateBoardWinner(boards[lastMove[1]])) invalid_move_flag=0;\n\n    return invalid_move_flag\n\n  }\n\n\n  const handleClick = (boardIndex, cellIndex) => {\n    if (winner || boards[boardIndex][cellIndex]) return;\n    \n    const newBoards = boards.map((board, i) => \n      i === boardIndex \n        ? board.map((cell, j) => j === cellIndex ? (xIsNext ? 'X' : 'O') : cell)\n        : board\n    );\n\n    if(checkInvalidMove(boardIndex)) return;\n\n\n    \n\n    setLastMove([boardIndex,cellIndex])\n    setBoards(newBoards);\n    setXIsNext(!xIsNext);\n\n    const newWinner = calculateGridWinner(newBoards);\n    setWinner(newWinner);\n  };\n\n  const renderBoard = (boardIndex) => (\n    <Board\n      board={boards[boardIndex]}\n      onClick={(cellIndex) => handleClick(boardIndex, cellIndex)}\n    />\n  );\n\n  return (\n    <div>\n      <div>\n        {!winner \n          ? `Next player: ${xIsNext ? 'X' : 'O'}`\n          : `Woohoo!! ${winner} won`}\n      </div>\n      <div style={{margin: 'auto', width:'34rem', display: 'grid', gridTemplateColumns: 'auto auto auto' }}>\n        {Array(9).fill(null).map((_, i) => (\n          <div key={i} style={{ border: '2px solid black', padding: '1px',background: checkInvalidMove(i) ? 'rgba(209, 57, 0, 0.329)' : 'white', transition: 'background-color 0.4s ease'}}>\n            {renderBoard(i)}\n          </div>\n        ))}\n      </div>\n      {winner && <div>{`Winner: ${winner}`}</div>}\n    </div>\n  );\n}\n\nfunction Square({ value, onClick }) {\n  return (\n    <button \n      style={{ width: '60px', height: '60px', fontSize: '3rem' }}\n      onClick={onClick}\n    >\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ board, onClick }) {\n  return (\n    <div style={{ display: 'grid', gridTemplateColumns: 'auto auto auto' }}>\n      {board.map((cell, i) => (\n        <Square key={i} value={cell} onClick={() => onClick(i)} />\n      ))}\n    </div>\n  );\n}\n\nexport default Game"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,aAAa,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,MAAMF,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;AAExE,MAAME,oBAAoB,GAAG,CAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAAE;AACjC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAAE;AACjC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAAA,CACtB;AAED,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;EACtC,KAAK,MAAM,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,IAAIL,oBAAoB,EAAE;IAC5C,IAAIE,KAAK,CAACC,CAAC,CAAC,IAAID,KAAK,CAACC,CAAC,CAAC,KAAKD,KAAK,CAACE,CAAC,CAAC,IAAIF,KAAK,CAACC,CAAC,CAAC,KAAKD,KAAK,CAACG,CAAC,CAAC,EAAE;MAC9D,OAAOH,KAAK,CAACC,CAAC,CAAC;IACjB;EACF;EACA,OAAO,IAAI;AACb,CAAC;AAED,MAAMG,mBAAmB,GAAIC,MAAM,IAAK;EACtC,MAAMC,WAAW,GAAGD,MAAM,CAACR,GAAG,CAAEG,KAAK,IAAKD,oBAAoB,CAACC,KAAK,CAAC,CAAC;EAEtE,KAAK,MAAM,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,IAAIL,oBAAoB,EAAE;IAC5C,IAAIQ,WAAW,CAACL,CAAC,CAAC,IAAIK,WAAW,CAACL,CAAC,CAAC,KAAKK,WAAW,CAACJ,CAAC,CAAC,IAAII,WAAW,CAACL,CAAC,CAAC,KAAKK,WAAW,CAACH,CAAC,CAAC,EAAE;MAC5F,OAAOG,WAAW,CAACL,CAAC,CAAC;IACvB;EACF;EACA,OAAO,IAAI;AACb,CAAC;AAED,SAASM,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACH,MAAM,EAAEI,SAAS,CAAC,GAAGlB,QAAQ,CAACG,aAAa,CAAC;EACnD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;EAErD,MAAMyB,gBAAgB,GAAIC,UAAU,IAAK;IACvC,IAAGlB,oBAAoB,CAACM,MAAM,CAACY,UAAU,CAAC,CAAC,EAAE,OAAO,CAAC;IAErD,IAAIC,iBAAiB,GAAG,CAAC;IAEzB,IAAGJ,QAAQ,CAAC,CAAC,CAAC,IAAG,IAAI,IAAIA,QAAQ,CAAC,CAAC,CAAC,IAAEG,UAAU,EAAEC,iBAAiB,GAAC,CAAC;IACrE,IAAGJ,QAAQ,CAAC,CAAC,CAAC,IAAG,IAAI,IAAIf,oBAAoB,CAACM,MAAM,CAACS,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEI,iBAAiB,GAAC,CAAC;IAEvF,OAAOA,iBAAiB;EAE1B,CAAC;EAGD,MAAMC,WAAW,GAAGA,CAACF,UAAU,EAAEG,SAAS,KAAK;IAC7C,IAAIR,MAAM,IAAIP,MAAM,CAACY,UAAU,CAAC,CAACG,SAAS,CAAC,EAAE;IAE7C,MAAMC,SAAS,GAAGhB,MAAM,CAACR,GAAG,CAAC,CAACG,KAAK,EAAEsB,CAAC,KACpCA,CAAC,KAAKL,UAAU,GACZjB,KAAK,CAACH,GAAG,CAAC,CAAC0B,IAAI,EAAEC,CAAC,KAAKA,CAAC,KAAKJ,SAAS,GAAIV,OAAO,GAAG,GAAG,GAAG,GAAG,GAAIa,IAAI,CAAC,GACtEvB,KACN,CAAC;IAED,IAAGgB,gBAAgB,CAACC,UAAU,CAAC,EAAE;IAKjCF,WAAW,CAAC,CAACE,UAAU,EAACG,SAAS,CAAC,CAAC;IACnCX,SAAS,CAACY,SAAS,CAAC;IACpBV,UAAU,CAAC,CAACD,OAAO,CAAC;IAEpB,MAAMe,SAAS,GAAGrB,mBAAmB,CAACiB,SAAS,CAAC;IAChDR,SAAS,CAACY,SAAS,CAAC;EACtB,CAAC;EAED,MAAMC,WAAW,GAAIT,UAAU,iBAC7BxB,OAAA,CAACkC,KAAK;IACJ3B,KAAK,EAAEK,MAAM,CAACY,UAAU,CAAE;IAC1BW,OAAO,EAAGR,SAAS,IAAKD,WAAW,CAACF,UAAU,EAAEG,SAAS;EAAE;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CACF;EAED,oBACEvC,OAAA;IAAAwC,QAAA,gBACExC,OAAA;MAAAwC,QAAA,EACG,CAACrB,MAAM,GACJ,gBAAgBF,OAAO,GAAG,GAAG,GAAG,GAAG,EAAE,GACrC,YAAYE,MAAM;IAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACNvC,OAAA;MAAKyC,KAAK,EAAE;QAACC,MAAM,EAAE,MAAM;QAAEC,KAAK,EAAC,OAAO;QAAEC,OAAO,EAAE,MAAM;QAAEC,mBAAmB,EAAE;MAAiB,CAAE;MAAAL,QAAA,EAClGtC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAAC0C,CAAC,EAAEjB,CAAC,kBAC5B7B,OAAA;QAAayC,KAAK,EAAE;UAAEM,MAAM,EAAE,iBAAiB;UAAEC,OAAO,EAAE,KAAK;UAACC,UAAU,EAAE1B,gBAAgB,CAACM,CAAC,CAAC,GAAG,yBAAyB,GAAG,OAAO;UAAEqB,UAAU,EAAE;QAA4B,CAAE;QAAAV,QAAA,EAC9KP,WAAW,CAACJ,CAAC;MAAC,GADPA,CAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLpB,MAAM,iBAAInB,OAAA;MAAAwC,QAAA,EAAM,WAAWrB,MAAM;IAAE;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACxB,EAAA,CAjEQD,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AAmEb,SAASsC,MAAMA,CAAC;EAAEC,KAAK;EAAElB;AAAQ,CAAC,EAAE;EAClC,oBACEnC,OAAA;IACEyC,KAAK,EAAE;MAAEE,KAAK,EAAE,MAAM;MAAEW,MAAM,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAO,CAAE;IAC3DpB,OAAO,EAAEA,OAAQ;IAAAK,QAAA,EAEhBa;EAAK;IAAAjB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACiB,GAAA,GATQJ,MAAM;AAWf,SAASlB,KAAKA,CAAC;EAAE3B,KAAK;EAAE4B;AAAQ,CAAC,EAAE;EACjC,oBACEnC,OAAA;IAAKyC,KAAK,EAAE;MAAEG,OAAO,EAAE,MAAM;MAAEC,mBAAmB,EAAE;IAAiB,CAAE;IAAAL,QAAA,EACpEjC,KAAK,CAACH,GAAG,CAAC,CAAC0B,IAAI,EAAED,CAAC,kBACjB7B,OAAA,CAACoD,MAAM;MAASC,KAAK,EAAEvB,IAAK;MAACK,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACN,CAAC;IAAE,GAA1CA,CAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2C,CAC1D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACkB,GAAA,GARQvB,KAAK;AAUd,eAAepB,IAAI;AAAA,IAAAqC,EAAA,EAAAK,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}