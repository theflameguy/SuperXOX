{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Documents/js/react/react-xox/SuperXOX/src/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './Game.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialBoards = Array(9).fill(null).map(() => Array(9).fill(null));\nconst colorPallet = {\n  color1: '#181C14',\n  color2: '#3C3D37',\n  color3: '#697565',\n  color4: '#ECDFCC'\n};\nconst WINNING_COMBINATIONS = [[0, 1, 2], [3, 4, 5], [6, 7, 8],\n// Rows\n[0, 3, 6], [1, 4, 7], [2, 5, 8],\n// Columns\n[0, 4, 8], [2, 4, 6] // Diagonals\n];\nconst calculateBoardWinner = board => {\n  for (const [a, b, c] of WINNING_COMBINATIONS) {\n    if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n      return board[a];\n    }\n  }\n  return null;\n};\nconst calculateGridWinner = boards => {\n  const gridWinners = boards.map(board => calculateBoardWinner(board));\n  for (const [a, b, c] of WINNING_COMBINATIONS) {\n    if (gridWinners[a] && gridWinners[a] === gridWinners[b] && gridWinners[a] === gridWinners[c]) {\n      return gridWinners[a];\n    }\n  }\n  return null;\n};\nfunction Game() {\n  _s();\n  const [boards, setBoards] = useState(initialBoards);\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [lastMove, setLastMove] = useState([null, null]);\n  const checkInvalidMove = boardIndex => {\n    if (calculateBoardWinner(boards[boardIndex])) return 1;\n    let invalid_move_flag = 0;\n    if (lastMove[1] != null && lastMove[1] != boardIndex) invalid_move_flag = 1;\n    if (lastMove[1] != null && calculateBoardWinner(boards[lastMove[1]])) invalid_move_flag = 0;\n    return invalid_move_flag;\n  };\n  const handleClick = (boardIndex, cellIndex) => {\n    if (winner || boards[boardIndex][cellIndex]) return;\n    const newBoards = boards.map((board, i) => i === boardIndex ? board.map((cell, j) => j === cellIndex ? xIsNext ? 'X' : 'O' : cell) : board);\n    if (checkInvalidMove(boardIndex)) return;\n    setLastMove([boardIndex, cellIndex]);\n    setBoards(newBoards);\n    setXIsNext(!xIsNext);\n    const newWinner = calculateGridWinner(newBoards);\n    setWinner(newWinner);\n  };\n  const renderBoard = boardIndex => /*#__PURE__*/_jsxDEV(Board, {\n    board: boards[boardIndex],\n    onClick: cellIndex => handleClick(boardIndex, cellIndex)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n  const miniBoardStyle = i => ({\n    border: '1px solid black',\n    width: '95%',\n    aspectRatio: '1/1',\n    // height: '90%',\n    // padding: '2px',\n    margin: 'auto',\n    background: checkInvalidMove(i) ? '#393E46' : '#71C9CE',\n    transition: 'background-color 0.5s ease',\n    overflow: 'hidden',\n    display: 'grid',\n    gridTemplateColumns: 'auto auto auto'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        padding: '15px',\n        textAlign: 'center'\n      },\n      children: !winner ? `Next player: ${xIsNext ? 'X' : 'O'}` : `Woohoo!! ${winner} won`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullBoard\",\n      children: Array(9).fill(null).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"miniBoard\",\n        style: miniBoardStyle(i),\n        children: renderBoard(i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `Winner: ${winner}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"A1Blg3m2aA58KbL7Bfh7Wf0/kk0=\");\n_c = Game;\nfunction Square({\n  value,\n  onClick,\n  style\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: style,\n    onClick: onClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Square;\nfunction Board({\n  board,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: board.map((cell, i) => /*#__PURE__*/_jsxDEV(Square, {\n      value: cell,\n      onClick: () => onClick(i)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_c3 = Board;\nexport default Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"Square\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"names":["React","StrictMode","createRoot","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","initialBoards","Array","fill","map","colorPallet","color1","color2","color3","color4","WINNING_COMBINATIONS","calculateBoardWinner","board","a","b","c","calculateGridWinner","boards","gridWinners","Game","_s","setBoards","xIsNext","setXIsNext","winner","setWinner","lastMove","setLastMove","checkInvalidMove","boardIndex","invalid_move_flag","handleClick","cellIndex","newBoards","i","cell","j","newWinner","renderBoard","Board","onClick","fileName","_jsxFileName","lineNumber","columnNumber","miniBoardStyle","border","width","aspectRatio","margin","background","transition","overflow","display","gridTemplateColumns","children","style","padding","textAlign","className","_","_c","Square","value","_c2","_c3","$RefreshReg$"],"sources":["/Users/abhishek/Documents/js/react/react-xox/SuperXOX/src/Game.jsx"],"sourcesContent":["import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './Game.css';\n\nimport { useState } from 'react';\n\nconst initialBoards = Array(9).fill(null).map(() => Array(9).fill(null));\n\nconst colorPallet = {\n  color1 : '#181C14',\n  color2 : '#3C3D37',\n  color3 : '#697565',\n  color4 : '#ECDFCC'\n\n}\n\nconst WINNING_COMBINATIONS = [\n  [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows\n  [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns\n  [0, 4, 8], [2, 4, 6] // Diagonals\n];\n\nconst calculateBoardWinner = (board) => {\n  for (const [a, b, c] of WINNING_COMBINATIONS) {\n    if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n      return board[a];\n    }\n  }\n  return null;\n};\n\nconst calculateGridWinner = (boards) => {\n  const gridWinners = boards.map((board) => calculateBoardWinner(board));\n  \n  for (const [a, b, c] of WINNING_COMBINATIONS) {\n    if (gridWinners[a] && gridWinners[a] === gridWinners[b] && gridWinners[a] === gridWinners[c]) {\n      return gridWinners[a];\n    }\n  }\n  return null;\n};\n\nfunction Game() {\n  const [boards, setBoards] = useState(initialBoards);\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [lastMove, setLastMove] = useState([null,null]);\n  \n  const checkInvalidMove = (boardIndex) => {\n    if(calculateBoardWinner(boards[boardIndex])) return 1;\n    \n    let invalid_move_flag = 0\n    \n    if(lastMove[1]!= null && lastMove[1]!=boardIndex) invalid_move_flag=1;\n    if(lastMove[1]!= null && calculateBoardWinner(boards[lastMove[1]])) invalid_move_flag=0;\n    \n    return invalid_move_flag\n    \n  }\n\n\n  const handleClick = (boardIndex, cellIndex) => {\n    if (winner || boards[boardIndex][cellIndex]) return;\n    \n    const newBoards = boards.map((board, i) => \n      i === boardIndex \n        ? board.map((cell, j) => j === cellIndex ? (xIsNext ? 'X' : 'O') : cell)\n        : board\n    );\n\n    if(checkInvalidMove(boardIndex)) return;\n\n\n    \n\n    setLastMove([boardIndex,cellIndex])\n    setBoards(newBoards);\n    setXIsNext(!xIsNext);\n\n    const newWinner = calculateGridWinner(newBoards);\n    setWinner(newWinner);\n  };\n\n  const renderBoard = (boardIndex) => (\n    <Board\n      board={boards[boardIndex]}\n      onClick={(cellIndex) => handleClick(boardIndex, cellIndex)}\n      \n    />\n  );\n\n  const miniBoardStyle =(i) =>({\n    border: '1px solid black',\n    width:'95%',\n    aspectRatio: '1/1',\n    // height: '90%',\n    // padding: '2px',\n    margin: 'auto',\n    background: checkInvalidMove(i) ?  '#393E46' : '#71C9CE',\n    transition: 'background-color 0.5s ease',\n    overflow: 'hidden',\n    display: 'grid',\n    gridTemplateColumns: 'auto auto auto'\n  })\n\n\n\n  return (\n    <div>\n      <h3 style={{ padding: '15px', textAlign: 'center' }} >\n        {!winner \n          ? `Next player: ${xIsNext ? 'X' : 'O'}`\n          : `Woohoo!! ${winner} won`}\n      </h3>\n      <div className='fullBoard'>\n        {Array(9).fill(null).map((_, i) => (\n          <div className='miniBoard' key={i} style={miniBoardStyle(i)}>\n            {renderBoard(i)}\n          </div>\n        ))}\n      </div>\n      {winner && <div>{`Winner: ${winner}`}</div>}\n    </div>\n  );\n}\n\n\n\nfunction Square({ value, onClick, style }) {\n  return (\n    <button \n      style={style}\n      onClick={onClick}\n    >\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ board, onClick}) {\n  return (\n    <> \n      {board.map((cell, i) => (\n        <Square key={i} value={cell} onClick={() => onClick(i)} />\n      ))}\n    </>\n  );\n}\n\nexport default Game"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}